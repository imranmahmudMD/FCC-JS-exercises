Given a positive integer num, return the sum of all odd Fibonacci numbers that are less than or equal to num.

The first two numbers in the Fibonacci sequence are 1 and 1. Every additional number in the sequence is the sum of the two previous numbers. The first six numbers of the Fibonacci sequence are 1, 1, 2, 3, 5 and 8.

For example, sumFibs(10) should return 10 because all odd Fibonacci numbers less than or equal to 10 are 1, 1, 3, and 5.

== ANSWER ==

function sumFibs(num) {
  let prevNumber = 0;
  let currNumber = 1;
  let sum = 0;

  while (currNumber <= num) {
    if(currNumber % 2 !=0) {
        sum += currNumber;
    } currNumber += prevNumber;
      prevNumber = currNumber - prevNumber;
  }

  return sum;
}

sumFibs(4);

// run a reduce to create an array which contains all the fibonacci numbers that are less than or equal to num. 

// filter the array to identify the odd numbers

// sum the filtered array
